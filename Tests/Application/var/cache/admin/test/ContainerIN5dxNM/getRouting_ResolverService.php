<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'routing.resolver' shared service.

$this->privates['routing.resolver'] = $instance = new \Symfony\Component\Config\Loader\LoaderResolver();

$instance->addLoader(($this->privates['routing.loader.xml'] ?? $this->load('getRouting_Loader_XmlService.php')));
$instance->addLoader(($this->privates['routing.loader.yml'] ?? $this->load('getRouting_Loader_YmlService.php')));
$instance->addLoader(($this->privates['routing.loader.php'] ?? $this->load('getRouting_Loader_PhpService.php')));
$instance->addLoader(($this->privates['routing.loader.glob'] ?? $this->load('getRouting_Loader_GlobService.php')));
$instance->addLoader(($this->privates['routing.loader.directory'] ?? $this->load('getRouting_Loader_DirectoryService.php')));
$instance->addLoader(($this->privates['routing.loader.service'] ?? ($this->privates['routing.loader.service'] = new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this))));
$instance->addLoader(($this->privates['sulu_website.routing.portal_loader'] ?? ($this->privates['sulu_website.routing.portal_loader'] = new \Sulu\Bundle\WebsiteBundle\Routing\PortalLoader())));
$instance->addLoader(($this->privates['sulu_document_manager.routing.version_loader'] ?? ($this->privates['sulu_document_manager.routing.version_loader'] = new \Sulu\Bundle\DocumentManagerBundle\Routing\Loader\VersionRouteLoader(false))));
$instance->addLoader(($this->privates['fos_rest.routing.loader.directory'] ?? $this->load('getFosRest_Routing_Loader_DirectoryService.php')));
$instance->addLoader(($this->privates['fos_rest.routing.loader.controller'] ?? $this->load('getFosRest_Routing_Loader_ControllerService.php')));
$instance->addLoader(($this->privates['fos_rest.routing.loader.yaml_collection'] ?? $this->load('getFosRest_Routing_Loader_YamlCollectionService.php')));
$instance->addLoader(($this->privates['fos_rest.routing.loader.xml_collection'] ?? $this->load('getFosRest_Routing_Loader_XmlCollectionService.php')));
$instance->addLoader(($this->privates['routing.loader.annotation'] ?? $this->load('getRouting_Loader_AnnotationService.php')));
$instance->addLoader(($this->privates['routing.loader.annotation.directory'] ?? $this->load('getRouting_Loader_Annotation_DirectoryService.php')));
$instance->addLoader(($this->privates['routing.loader.annotation.file'] ?? $this->load('getRouting_Loader_Annotation_FileService.php')));

return $instance;
