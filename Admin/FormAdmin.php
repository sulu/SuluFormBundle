<?php

/*
 * This file is part of Sulu.
 *
 * (c) MASSIVE ART WebServices GmbH
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Sulu\Bundle\FormBundle\Admin;

use Sulu\Bundle\AdminBundle\Admin\Admin;
use Sulu\Bundle\AdminBundle\Navigation\Navigation;
use Sulu\Bundle\AdminBundle\Navigation\NavigationItem;
use Sulu\Component\Security\Authorization\SecurityCheckerInterface;

/**
 * Generated by https://github.com/alexander-schranz/sulu-backend-bundle.
 */
class FormAdmin extends Admin
{
    /**
     * @var SecurityCheckerInterface
     */
    protected $securityChecker;

    /**
     * @var string
     */
    protected $title;

    /**
     * FormAdmin constructor.
     *
     * @param SecurityCheckerInterface $securityChecker
     * @param string $title
     */
    public function __construct(SecurityCheckerInterface $securityChecker, string $title)
    {
        $this->securityChecker = $securityChecker;
        $this->title = $title;
    }

    public function getNavigation(): Navigation
    {
        // set root navigation
        $rootNavigationItem = new NavigationItem($this->title);

        // parent navigation
        $section = new NavigationItem('navigation.modules');

        // create section
        if ($this->securityChecker->hasPermission('sulu.form.forms', 'view')) {
            $navigationItem = new NavigationItem('sulu_form.forms');
            $navigationItem->setIcon('magic');
            $navigationItem->setAction('forms');
            $navigationItem->setPosition(10);
            $section->addChild($navigationItem);
            $rootNavigationItem->addChild($section);
        }

        return new Navigation($rootNavigationItem);
    }

    /**
     * {@inheritdoc}
     */
    public function getCommands()
    {
        return [];
    }

    /**
     * {@inheritdoc}
     */
    public function getJsBundleName()
    {
        return 'suluform';
    }

    /**
     * {@inheritdoc}
     */
    public function getSecurityContexts()
    {
        return [
            'Sulu' => [
                'Form' => [
                    'sulu.form.forms',
                ],
            ],
        ];
    }
}
